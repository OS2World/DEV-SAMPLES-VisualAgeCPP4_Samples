// This file was generated by the Makefile Conversion Aid.
//
// The command line used to convert the make file was:
// make2cfg
//
// This conversion is only one possible representation of the make file
// based on the evaluation of conditional statements and variables
// at the time of conversion.

option compatibility_options = lang(allowTypedefAsClassName,yes),
 gen(mangleLinkageKeywordOnlyFuncs,no),
 lang(compatMath,yes),
 lang(ansiForStatementScopes,no),
 lang(nokeyword,"bool"),
 lang(nokeyword,"export"),
 lang(nokeyword,"false"),
 lang(nokeyword,"mutable"),
 lang(nokeyword,"true"),
 lang(templateDefImpls,dontparse),
 macros(redefine,yes),
 link(nameMangling,compat),
 gen(rtti, yes)

/* lancelot.exe */

        group R_lancelot_obj_ = 'lancelot.cpp', 'lancelot.h'
        option O_lancelot_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lancelot_obj_ = 'lancelot.cpp'
        group D_lancelot_obj_ = _lancelot_obj_, R_lancelot_obj_

        group R_lancelot_exe_ = 'lancelot.obj', 'lance.lib'
        option compatibility_options,
               define('IC_TRACE_ALL'),define('IC_DEVELOP'),
               link(pmtype,pm),
               link(linkWithSharedLib),
               link(linkWithMultiThreadLib)
        {
           target type(exe) 'lancelot.exe'
           {
              option O_lancelot_obj_ {option macros('global', 'yes')
              {
                 source type('cpp') 'ibase.hpp'
                 source type('cpp') 'iapp.hpp'
                 source type('cpp') 'ithread.hpp'
                 source type('cpp') 'imsgbox.hpp'
                 source type('cpp') 'irect.hpp'
                 source type('cpp') 'iframe.hpp'
                 source type('cpp') 'ititle.hpp'
                 source type('cpp') 'iinfoa.hpp'
                 source type('cpp') 'imenubar.hpp'
                 source type('cpp') 'itbar.hpp'
                 source type('cpp') 'iflytext.hpp'
                 source type('cpp') 'iflyhhdr.hpp'
                 source type('cpp') 'icmdhdr.hpp'
                 source type('cpp') 'icnrhdr.hpp'
                 source type('cpp') 'icnrmhdr.hpp'
                 source type('cpp') 'icnr.hpp'
                 source type('cpp') 'ipopmenu.hpp'
                 source type('cpp') 'ifont.hpp'
                 source type('cpp') 'ihelp.hpp'
                 source type('cpp') 'ihelphdr.hpp'
                 source type('cpp') 'inotebk.hpp'
                 source type('cpp') 'ipagehdr.hpp'
                 source type('cpp') 'igraphbt.hpp'
                 source type('cpp') 'icheckbx.hpp'
                 source type('cpp') 'icombobx.hpp'
                 source type('cpp') 'imcelcv.hpp'
                 source type('cpp') 'iselhdr.hpp'
                 source type('cpp') 'iostream.h'
                 source type('cpp') 'iprofile.hpp'
                 source type('cpp') 'idate.hpp'
                 source type('cpp') 'ikeybag.h'
                 source type('cpp') 'ibag.h'
                 source type('cpp') 'ispinnum.hpp'
                 source type('cpp') 'iradiobt.hpp'
                 source type('cpp') 'ivport.hpp'
                 source type('cpp') 'isplitcv.hpp'
                 source type('cpp') 'igrect.hpp'
                 source type('cpp') 'igstring.hpp'
                 source type('cpp') 'iglist.hpp'
                 source type('cpp') 'idrawcv.hpp'
                 source type('cpp') 'isizehdr.hpp'
                 source type('cpp') 'ikeyset.h'
              }
              option macros('global', 'yes')
              {
                 source type('cpp') 'linfowin.hpp'
                 source type('cpp') 'lmainwin.hpp'
              }
              source type(cpp) _lancelot_obj_}
              source type(lib) 'lance.lib'
           }
        }

