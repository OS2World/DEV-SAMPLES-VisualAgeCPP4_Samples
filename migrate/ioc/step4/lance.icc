// This file was generated by the Makefile Conversion Aid.
//
// The command line used to convert the make file was:
// make2cfg
//
// This conversion is only one possible representation of the make file
// based on the evaluation of conditional statements and variables
// at the time of conversion.

option compatibility_options = lang(allowTypedefAsClassName,yes),
 gen(mangleLinkageKeywordOnlyFuncs,no),
 lang(compatMath,yes),
 lang(ansiForStatementScopes,no),
 lang(nokeyword,"bool"),
 lang(nokeyword,"export"),
 lang(nokeyword,"false"),
 lang(nokeyword,"mutable"),
 lang(nokeyword,"true"),
 lang(templateDefImpls,dontparse),
 macros(redefine,yes),
 link(nameMangling,compat),
 gen(rtti, yes)

/* lance.dll */

        group R_lmainwin_obj_ = 'lmainwin.cpp', 'lmainwin.hpp', 'lancelot.h'
        option O_lmainwin_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lmainwin_obj_ = 'lmainwin.cpp'
        group D_lmainwin_obj_ = _lmainwin_obj_, R_lmainwin_obj_

        group R_linfowin_obj_ = 'linfowin.cpp', 'linfowin.hpp', 'lancelot.h'
        option O_linfowin_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _linfowin_obj_ = 'linfowin.cpp'
        group D_linfowin_obj_ = _linfowin_obj_, R_linfowin_obj_

        group R_lperswin_obj_ = 'lperswin.cpp', 'lperswin.hpp', 'lancelot.h'
        option O_lperswin_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lperswin_obj_ = 'lperswin.cpp'
        group D_lperswin_obj_ = _lperswin_obj_, R_lperswin_obj_

        group R_linfonb_obj_ = 'linfonb.cpp', 'linfonb.hpp', 'lancelot.h'
        option O_linfonb_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _linfonb_obj_ = 'linfonb.cpp'
        group D_linfonb_obj_ = _linfonb_obj_, R_linfonb_obj_

        group R_lcnrobj_obj_ = 'lcnrobj.cpp', 'lcnrobj.hpp', 'lancelot.h'
        option O_lcnrobj_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lcnrobj_obj_ = 'lcnrobj.cpp'
        group D_lcnrobj_obj_ = _lcnrobj_obj_, R_lcnrobj_obj_

        group R_lpagectl_obj_ = 'lpagectl.cpp', 'lpagectl.hpp', 'lancelot.h'
        option O_lpagectl_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lpagectl_obj_ = 'lpagectl.cpp'
        group D_lpagectl_obj_ = _lpagectl_obj_, R_lpagectl_obj_

        group R_lacct_obj_ = 'lacct.cpp', 'lacct.hpp', 'lancelot.h'
        option O_lacct_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lacct_obj_ = 'lacct.cpp'
        group D_lacct_obj_ = _lacct_obj_, R_lacct_obj_

        group R_lstatus_obj_ = 'lstatus.cpp', 'lstatus.hpp', 'lancelot.h'
        option O_lstatus_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lstatus_obj_ = 'lstatus.cpp'
        group D_lstatus_obj_ = _lstatus_obj_, R_lstatus_obj_

        group R_lbadge_obj_ = 'lbadge.cpp', 'lbadge.hpp', 'lancelot.h'
        option O_lbadge_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lbadge_obj_ = 'lbadge.cpp'
        group D_lbadge_obj_ = _lbadge_obj_, R_lbadge_obj_

        group R_lskill_obj_ = 'lskill.cpp', 'lskill.hpp', 'lancelot.h'
        option O_lskill_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lskill_obj_ = 'lskill.cpp'
        group D_lskill_obj_ = _lskill_obj_, R_lskill_obj_

        group R_lgenl_obj_ = 'lgenl.cpp', 'lgenl.hpp', 'lancelot.h'
        option O_lgenl_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lgenl_obj_ = 'lgenl.cpp'
        group D_lgenl_obj_ = _lgenl_obj_, R_lgenl_obj_

        group R_lgoodies_obj_ = 'lgoodies.cpp', 'lgoodies.hpp', 'lancelot.h'
        option O_lgoodies_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lgoodies_obj_ = 'lgoodies.cpp'
        group D_lgoodies_obj_ = _lgoodies_obj_, R_lgoodies_obj_

        group R_ldbase_obj_ = 'ldbase.cpp', 'ldbase.hpp', 'lancelot.h'
        option O_ldbase_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _ldbase_obj_ = 'ldbase.cpp'
        group D_ldbase_obj_ = _ldbase_obj_, R_ldbase_obj_

        group R_lproject_obj_ = 'lproject.cpp', 'lproject.hpp', 'lancelot.h'
        option O_lproject_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lproject_obj_ = 'lproject.cpp'
        group D_lproject_obj_ = _lproject_obj_, R_lproject_obj_

        group R_ltask_obj_ = 'ltask.cpp', 'ltask.hpp', 'lancelot.h'
        option O_ltask_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _ltask_obj_ = 'ltask.cpp'
        group D_ltask_obj_ = _ltask_obj_, R_ltask_obj_

        group R_ltimec_obj_ = 'ltimec.cpp', 'ltimec.hpp', 'lancelot.h'
        option O_ltimec_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _ltimec_obj_ = 'ltimec.cpp'
        group D_ltimec_obj_ = _ltimec_obj_, R_ltimec_obj_

        group R_ltimepie_obj_ = 'ltimepie.cpp', 'ltimepie.hpp', 'lancelot.h'
        option O_ltimepie_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _ltimepie_obj_ = 'ltimepie.cpp'
        group D_ltimepie_obj_ = _ltimepie_obj_, R_ltimepie_obj_

        group R_lperswdm_obj_ = 'lperswdm.cpp', 'lperswdm.hpp', 'lancelot.h'
        option O_lperswdm_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lperswdm_obj_ = 'lperswdm.cpp'
        group D_lperswdm_obj_ = _lperswdm_obj_, R_lperswdm_obj_

        group R_lgeneric_obj_ = 'lgeneric.cpp', 'lgeneric.hpp', 'lancelot.h'
        option O_lgeneric_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _lgeneric_obj_ = 'lgeneric.cpp'
        group D_lgeneric_obj_ = _lgeneric_obj_, R_lgeneric_obj_

        group R_ldbqry_obj_ = 'ldbqry.cpp', 'ldbqry.hpp', 'lancelot.h'
        option O_ldbqry_obj_ = define('IC_TRACE_ALL'),define('IC_DEVELOP')
        group _ldbqry_obj_ = 'ldbqry.cpp'
        group D_ldbqry_obj_ = _ldbqry_obj_, R_ldbqry_obj_

        group R_lance_dll_ = 'lmainwin.obj', 'linfowin.obj', 'lperswin.obj',
                'linfonb.obj', 'lcnrobj.obj', 'lpagectl.obj', 'lacct.obj',
                'lstatus.obj', 'lbadge.obj', 'lskill.obj', 'lgenl.obj',
                'lgoodies.obj', 'ldbase.obj', 'lproject.obj', 'ltask.obj',
                'ltimec.obj', 'ltimepie.obj', 'lperswdm.obj', 'lgeneric.obj',
                'ldbqry.obj', 'lance.def'
        option compatibility_options,
               define('IC_TRACE_ALL'),define('IC_DEVELOP'),
               link(pmtype,pm),
               link(linkWithSharedLib),
               link(linkWithMultiThreadLib),
               link(exportAll)
        {
           target type(dll) 'lance.dll'
           {
              option O_lmainwin_obj_ {source type(cpp) _lmainwin_obj_}
              option O_linfowin_obj_ {option macros('global', 'yes')
              {
                 source type('cpp') 'isysmenu.hpp'
              }
              source type(cpp) _linfowin_obj_}
              option O_lperswin_obj_ {option macros('global', 'yes')
              {
                 source type('cpp') 'ibase.hpp'
                 source type('cpp') 'iapp.hpp'
                 source type('cpp') 'irect.hpp'
                 source type('cpp') 'iframe.hpp'
                 source type('cpp') 'ititle.hpp'
                 source type('cpp') 'iinfoa.hpp'
                 source type('cpp') 'imenubar.hpp'
                 source type('cpp') 'idmhndlr.hpp'
                 source type('cpp') 'itbar.hpp'
                 source type('cpp') 'iflytext.hpp'
                 source type('cpp') 'iflyhhdr.hpp'
                 source type('cpp') 'icmdhdr.hpp'
                 source type('cpp') 'icnrhdr.hpp'
                 source type('cpp') 'icnrmhdr.hpp'
                 source type('cpp') 'icnr.hpp'
                 source type('cpp') 'ipopmenu.hpp'
                 source type('cpp') 'ifont.hpp'
                 source type('cpp') 'imsgbox.hpp'
                 source type('cpp') 'ihelp.hpp'
                 source type('cpp') 'ihelphdr.hpp'
                 source type('cpp') 'iostream.h'
                 source type('cpp') 'iprofile.hpp'
                 source type('cpp') 'idate.hpp'
                 source type('cpp') 'ikeybag.h'
                 source type('cpp') 'ibag.h'
                 source type('cpp') 'imcelcv.hpp'
                 source type('cpp') 'ientryfd.hpp'
                 source type('cpp') 'inotebk.hpp'
                 source type('cpp') 'iselhdr.hpp'
                 source type('cpp') 'igraphbt.hpp'
                 source type('cpp') 'icheckbx.hpp'
                 source type('cpp') 'icombobx.hpp'
                 source type('cpp') 'ispinnum.hpp'
                 source type('cpp') 'iradiobt.hpp'
                 source type('cpp') 'idmprov.hpp'
                 source type('cpp') 'idmcnrit.hpp'
                 source type('cpp') 'idmevent.hpp'
                 source type('cpp') 'idmimage.hpp'
                 source type('cpp') 'ipagehdr.hpp'
                 source type('cpp') 'ivport.hpp'
                 source type('cpp') 'isplitcv.hpp'
                 source type('cpp') 'igrect.hpp'
                 source type('cpp') 'igstring.hpp'
                 source type('cpp') 'iglist.hpp'
                 source type('cpp') 'idrawcv.hpp'
                 source type('cpp') 'isizehdr.hpp'
                 source type('cpp') 'ikeyset.h'
              }
              source type(cpp) _lperswin_obj_}
              option O_linfonb_obj_ {option macros('global', 'yes')
              {
                 source type('cpp') 'ireslib.hpp'
              }
              source type('cpp') 'igpie.hpp'
              source type(cpp) _linfonb_obj_}
              option O_lcnrobj_obj_ {option macros('global', 'yes')
              {
                 source type('cpp') 'lcnrobj.hpp'
              }
              source type(cpp) _lcnrobj_obj_}
              option O_lpagectl_obj_ {source type(cpp) _lpagectl_obj_}
              option O_lacct_obj_ {source type(cpp) _lacct_obj_}
              option O_lstatus_obj_ {source type(cpp) _lstatus_obj_}
              option O_lbadge_obj_ {option macros('global', 'yes')
              {
                 source type('cpp') 'lgeneric.hpp'
              }
              source type(cpp) _lbadge_obj_}
              option O_lskill_obj_ {option macros('global', 'yes')
              {
                 source type('cpp') 'lentry.hpp'
                 source type('cpp') 'litems.hpp'
                 source type('cpp') 'lpagectl.hpp'
              }
              source type(cpp) _lskill_obj_}
              option O_lgenl_obj_ {source type(cpp) _lgenl_obj_}
              option O_lgoodies_obj_ {source type('cpp') 'lgoodies.hpp'
              option macros('global', 'yes')
              {
                 source type('cpp') 'lancelot.h'
              }
              source type(cpp) _lgoodies_obj_}
              option O_ldbase_obj_ {option macros('global', 'yes')
              {
                 source type('cpp') 'icnrctl.hpp'
              }
              source type(cpp) _ldbase_obj_}
              option O_lproject_obj_ {source type(cpp) _lproject_obj_}
              option O_ltask_obj_ {source type(cpp) _ltask_obj_}
              option O_ltimec_obj_ {option macros('global', 'yes')
              {
                 source type('cpp') 'stdio.h'
                 source type('cpp') 'iscroll.hpp'
              }
              source type(cpp) _ltimec_obj_}
              option O_ltimepie_obj_ {option macros('global', 'yes')
              {
                 source type('cpp') 'igrafctx.hpp'
              }
              source type(cpp) _ltimepie_obj_}
              option O_lperswdm_obj_ {source type(cpp) _lperswdm_obj_}
              option O_lgeneric_obj_ {option macros('global', 'yes')
              {
                 source type('cpp') 'ictlevt.hpp'
              }
              source type(cpp) _lgeneric_obj_}
              option O_ldbqry_obj_ {source type(cpp) _ldbqry_obj_}
           }
        }

        group R_lancelot_inf_ = 'lancelot.ipf'
        run sources(R_lancelot_inf_) targets('lancelot.inf')
           'ipfc lancelot.ipf /inf'

        group R_lanchelp_hlp_ = 'lanchelp.ipf'
        run sources(R_lanchelp_hlp_) targets('lanchelp.hlp')
           'ipfc lanchelp.ipf'

        group R_lstub_obj_ = 'lstub.cpp'
        group _lstub_obj_ = 'lstub.cpp'
        group D_lstub_obj_ = _lstub_obj_, R_lstub_obj_

        group R_lancelot_res_ = 'lancelot.rc', 'lancelot.h', 'lancelot.ico',
                'query.ico', 'query2.ico', 'person1.ico', 'person2.ico',
                'person3.ico', 'person4.ico', 'personu.ico', 'add.ico',
                'change.ico', 'help.ico', 'next.ico', 'previous.ico',
                'remove.ico', 'save.ico', 'undo.ico', 'arrange.bmp', 'boot.bmp',
                'create.bmp', 'deselall.bmp', 'opendeta.bmp', 'openicon.bmp',
                'opentree.bmp', 'selall.bmp', 'sortasc.bmp', 'sortdesc.bmp',
                'transfer.bmp'
        group _lancelot_res_ = 'lancelot.rc'
        group D_lancelot_res_ = _lancelot_res_, R_lancelot_res_

        group R_lancres_dll_ = 'lstub.obj', 'lancelot.res'
        run before sources(R_lancres_dll_)
           'echo LIBRARY lancres > lancres.def'
        option compatibility_options
        {
           target type(dll) 'lancres.dll'
           {
              source type(cpp) _lstub_obj_
              source type(rc) _lancelot_res_
           }
        }

